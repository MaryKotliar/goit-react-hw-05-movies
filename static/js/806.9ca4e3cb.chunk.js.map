{"version":3,"file":"static/js/806.9ca4e3cb.chunk.js","mappings":"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","sources":["api.js","components/Loader.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '67983da9f1b0244a3f38bd567d5477a8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const fetchTrendingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get('trending/all/day?', {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n\n      // page: `${currentPage}`,\n    },\n  });\n  //   const images = normalisedImages(response.data.hits);\n  //   const totalPages = Math.ceil(response.data.totalHits / PER_PAGE);\n  const movies = normalisedMovies(results);\n  return movies;\n};\nconst normalisedMovies = movies =>\n  movies.map(({ id, original_title, poster_path, name }) => ({\n    id,\n    original_title,\n    poster_path,\n    name,\n  }));\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchCastInfo = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(`search/movie?api_key=${API_KEY}`, {\n    params: {\n      include_adult: false,\n      language: 'en-US',\n      query: `${query}`,\n    },\n  });\n\n  return data.results;\n};\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ColorRing\n    visible={true}\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"blocks-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"blocks-wrapper\"\n    colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n  />\n);\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  margin-top: 10px;\n  font-weight: 500;\n`;\nexport const TextReview = styled.p`\n  margin-top: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchReviews } from 'api';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Text, TextReview } from './Reviews.styled';\nconst Reviews = () => {\n  const [reviews, setReviews] = useState('');\n  const [loading, setlLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { id } = useParams();\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        setlLoading(true);\n        setError('');\n        const { results } = await fetchReviews(id);\n        setReviews(results);\n      } catch (error) {\n        setError('This didn`t work. Please try again later.');\n      } finally {\n        setlLoading(false);\n      }\n    }\n\n    getReviews();\n  }, [id]);\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n  return (\n    <div>\n      {loading && <Loader />}\n\n      {reviews.length !== 0 ? (\n        reviews.map(({ author, id, content }) => (\n          <div key={id}>\n            <Text>Author: {author}</Text>\n            <TextReview>{content}</TextReview>\n          </div>\n        ))\n      ) : (\n        <p>We don`t have any reviews yet</p>\n      )}\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["API_KEY","axios","fetchTrendingMovies","params","api_key","language","include_adult","results","data","movies","normalisedMovies","map","id","original_title","poster_path","name","fetchMovieById","fetchCastInfo","fetchReviews","fetchMovieByName","query","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Text","styled","TextReview","useState","reviews","setReviews","loading","setlLoading","error","setError","useParams","useEffect","getReviews","toast","length","author","content","position"],"sourceRoot":""}