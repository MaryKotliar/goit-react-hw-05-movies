{"version":3,"file":"static/js/314.04794dd3.chunk.js","mappings":"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","sources":["api.js","components/Loader.js","pages/MovieDetails/MovieDetails.styled.js","components/GoBackLink/GoBackLink.styled.js","components/GoBackLink/GoBackLink.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '67983da9f1b0244a3f38bd567d5477a8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const fetchTrendingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get('trending/all/day?', {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n\n      // page: `${currentPage}`,\n    },\n  });\n  //   const images = normalisedImages(response.data.hits);\n  //   const totalPages = Math.ceil(response.data.totalHits / PER_PAGE);\n  const movies = normalisedMovies(results);\n  return movies;\n};\nconst normalisedMovies = movies =>\n  movies.map(({ id, original_title, poster_path, name }) => ({\n    id,\n    original_title,\n    poster_path,\n    name,\n  }));\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchCastInfo = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(`search/movie?api_key=${API_KEY}`, {\n    params: {\n      include_adult: false,\n      language: 'en-US',\n      query: `${query}`,\n    },\n  });\n\n  return data.results;\n};\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ColorRing\n    visible={true}\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"blocks-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"blocks-wrapper\"\n    colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n  />\n);\n","import styled from 'styled-components';\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n\n  padding: 20px 0;\n`;\nexport const PosterWrapper = styled.div`\n  width: 200px;\n  height: 270px;\n`;\nexport const InfoWrapper = styled.div`\n  width: 600px;\n\n  margin-left: 10px;\n`;\nexport const AddInfoWrapper = styled.div`\n  padding: 10px 6px;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const AddInfoItem = styled.div`\n  margin-top: 10px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\n\nimport { StyledLink } from './GoBackLink.styled';\nexport const GoBackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchMovieById } from 'api';\nimport {\n  AddInfoWrapper,\n  AddInfoItem,\n  InfoWrapper,\n  MovieInfoWrapper,\n  PosterWrapper,\n} from './MovieDetails.styled';\nimport { Link } from 'react-router-dom';\nimport { Loader } from 'components/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { GoBackLink } from 'components/GoBackLink/GoBackLink';\nfunction getPoster(poster) {\n  if (!poster) {\n    return 'https://upload.wikimedia.org/wikipedia/commons/6/64/Poster_not_available.jpg';\n  } else {\n    return `https://image.tmdb.org/t/p/w300/${poster}`;\n  }\n}\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [loading, setlLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  useEffect(() => {\n    async function getMovieById() {\n      try {\n        setlLoading(true);\n        setError('');\n        const movieData = await fetchMovieById(id);\n\n        setMovie(movieData);\n      } catch (error) {\n        setError('This didn`t work. Please try again later.');\n      } finally {\n        setlLoading(false);\n      }\n    }\n    getMovieById();\n  }, [id]);\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  const { poster_path, original_title, vote_average, overview, genres } = movie;\n  const userScore = Math.round(vote_average * 10);\n  return (\n    <div>\n      {loading && <Loader />}\n\n      {!error && !loading && <GoBackLink to={backLinkHref}>Go Back</GoBackLink>}\n      {!error && !loading && (\n        <MovieInfoWrapper>\n          <PosterWrapper>\n            <img src={getPoster(poster_path)} alt=\"poster\" />\n          </PosterWrapper>\n          <InfoWrapper>\n            <h1>{original_title}</h1>\n            <p>User Score: {userScore}%</p>\n            <h2>Overview</h2>\n            {overview ? <p>{overview}</p> : 'Overview is not available.'}\n            <h2>Genres</h2>\n            {genres\n              ? genres.map((genre, index) => <p key={index}>{genre.name}</p>)\n              : 'Genres is not available'}\n          </InfoWrapper>\n        </MovieInfoWrapper>\n      )}\n      {!error && !loading && (\n        <AddInfoWrapper>\n          <ul>\n            Additional Information\n            <AddInfoItem>\n              <Link to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </Link>\n            </AddInfoItem>\n            <AddInfoItem>\n              <Link to=\"reviews\">Reviews</Link>\n            </AddInfoItem>\n          </ul>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </AddInfoWrapper>\n      )}\n\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["API_KEY","axios","fetchTrendingMovies","params","api_key","language","include_adult","results","data","movies","normalisedMovies","map","id","original_title","poster_path","name","fetchMovieById","fetchCastInfo","fetchReviews","fetchMovieByName","query","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","MovieInfoWrapper","styled","PosterWrapper","InfoWrapper","AddInfoWrapper","AddInfoItem","StyledLink","Link","GoBackLink","to","children","size","useState","movie","setMovie","loading","setlLoading","error","setError","useParams","backLinkHref","useLocation","state","from","useEffect","movieData","getMovieById","toast","poster","vote_average","overview","genres","userScore","Math","round","src","alt","genre","index","Suspense","fallback","position"],"sourceRoot":""}