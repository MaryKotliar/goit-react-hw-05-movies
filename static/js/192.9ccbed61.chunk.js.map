{"version":3,"file":"static/js/192.9ccbed61.chunk.js","mappings":"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","sources":["api.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '67983da9f1b0244a3f38bd567d5477a8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const fetchTrendingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get('trending/all/day?', {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n\n      // page: `${currentPage}`,\n    },\n  });\n  //   const images = normalisedImages(response.data.hits);\n  //   const totalPages = Math.ceil(response.data.totalHits / PER_PAGE);\n  const movies = normalisedMovies(results);\n  return movies;\n};\nconst normalisedMovies = movies =>\n  movies.map(({ id, original_title, poster_path, name }) => ({\n    id,\n    original_title,\n    poster_path,\n    name,\n  }));\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchCastInfo = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(`search/movie?api_key=${API_KEY}`, {\n    params: {\n      include_adult: false,\n      language: 'en-US',\n      query: `${query}`,\n    },\n  });\n\n  return data.results;\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.li`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.p`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { MovieName, Container, CardWrapper } from './MoviesList.styled';\nimport { Link, useLocation } from 'react-router-dom';\nexport const Movieslist = ({ movies }) => {\n  function getPoster(poster) {\n    if (poster === null) {\n      return 'https://upload.wikimedia.org/wikipedia/commons/6/64/Poster_not_available.jpg';\n    } else {\n      return `https://image.tmdb.org/t/p/w300/${poster}`;\n    }\n  }\n  const location = useLocation();\n  return (\n    <>\n      <Container>\n        {movies.map(({ id, original_title, poster_path, name }) => (\n          <CardWrapper key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img src={getPoster(poster_path)} alt=\"poster\" />\n              <MovieName>{original_title ?? name}</MovieName>\n            </Link>\n          </CardWrapper>\n        ))}\n      </Container>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 22px;\n  height: 22px;\n  position: absolute;\n  right: 9px;\n  top: 10px;\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  width: 39px;\n  height: 39px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  border-radius: 4px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import { Wrapper, Input, Icon, Button } from './SearchBox.styled';\nimport { useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nexport const SearchBox = ({ name, onSubmit }) => {\n  const [searchName, setSearchName] = useState('');\n\n  const handleChange = event => {\n    setSearchName(event.currentTarget.value.toLowerCase());\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    if (searchName === '') {\n      toast.error('Please input search query!');\n    }\n    onSubmit(searchName);\n    setSearchName('');\n  };\n  return (\n    <Wrapper onSubmit={handleFormSubmit}>\n      <Input type=\"text\" name={name} onChange={handleChange} />\n      <Button type=\"submit\">\n        <Icon />\n      </Button>\n      <Toaster position=\"top-right\" />\n    </Wrapper>\n  );\n};\n","import { SearchBox } from 'components/SearchBox/SearchBox';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieByName } from 'api';\nimport { useState, useEffect } from 'react';\nimport { Movieslist } from 'components/MoviesList/MoviesList';\nimport { ColorRing } from 'react-loader-spinner';\nimport toast, { Toaster } from 'react-hot-toast';\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setlLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const nameQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (nameQuery === '') return;\n    async function getMoviesByName() {\n      try {\n        setlLoading(true);\n        setError(false);\n\n        const movies = await fetchMovieByName(nameQuery);\n\n        setMovies(movies);\n        if (movies.length < 1) {\n          toast.error(\n            'Sorry, we didn`t find movies according to your request.'\n          );\n        }\n      } catch (error) {\n        setError(true);\n        console.log(error);\n      } finally {\n        setlLoading(false);\n      }\n    }\n    getMoviesByName();\n  }, [nameQuery]);\n\n  const onSubmit = name => {\n    setSearchParams(name !== '' ? { query: name } : {});\n  };\n  return (\n    <main>\n      <SearchBox value={nameQuery} onSubmit={onSubmit}></SearchBox>\n\n      {movies && <Movieslist movies={movies} />}\n      {error && toast.error(\"This didn't work.Please try again later !\")}\n      {loading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n      <Toaster position=\"top-right\" />\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["API_KEY","axios","fetchTrendingMovies","params","api_key","language","include_adult","results","data","movies","normalisedMovies","map","id","original_title","poster_path","name","fetchMovieById","fetchCastInfo","fetchReviews","fetchMovieByName","query","Container","styled","CardWrapper","MovieName","Movieslist","location","useLocation","poster","to","state","from","src","alt","Wrapper","Input","Icon","HiSearch","Button","SearchBox","onSubmit","useState","searchName","setSearchName","event","preventDefault","toast","type","onChange","currentTarget","value","toLowerCase","position","setMovies","loading","setlLoading","error","setError","useSearchParams","searchParams","setSearchParams","nameQuery","get","useEffect","length","console","log","getMoviesByName","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}