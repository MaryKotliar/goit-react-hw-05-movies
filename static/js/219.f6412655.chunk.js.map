{"version":3,"file":"static/js/219.f6412655.chunk.js","mappings":"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","sources":["api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js","components/Loader.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '67983da9f1b0244a3f38bd567d5477a8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const fetchTrendingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get('trending/all/day?', {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n\n      // page: `${currentPage}`,\n    },\n  });\n  //   const images = normalisedImages(response.data.hits);\n  //   const totalPages = Math.ceil(response.data.totalHits / PER_PAGE);\n  const movies = normalisedMovies(results);\n  return movies;\n};\nconst normalisedMovies = movies =>\n  movies.map(({ id, original_title, poster_path, name }) => ({\n    id,\n    original_title,\n    poster_path,\n    name,\n  }));\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchCastInfo = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(`search/movie?api_key=${API_KEY}`, {\n    params: {\n      include_adult: false,\n      language: 'en-US',\n      query: `${query}`,\n    },\n  });\n\n  return data.results;\n};\n","import styled from 'styled-components';\n\nexport const PhotoWrapper = styled.div`\n  width: 200px;\n  height: auto;\n`;\nexport const Container = styled.ul`\n  margin-top: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchCastInfo } from 'api';\nimport { useParams } from 'react-router-dom';\nimport { PhotoWrapper, Container } from './Cast.styled';\nimport { Loader } from 'components/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\nconst Cast = () => {\n  const [castInfo, setCastInfo] = useState([]);\n  const [loading, setlLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getCastInfo() {\n      try {\n        setlLoading(true);\n        setError('');\n        const { cast } = await fetchCastInfo(id);\n        setCastInfo(cast);\n      } catch (error) {\n        setError('This didn`t work. Please try again later.');\n      } finally {\n        setlLoading(false);\n      }\n    }\n\n    getCastInfo();\n  }, [id]);\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  function getPoster(poster) {\n    if (poster === null) {\n      return 'https://upload.wikimedia.org/wikipedia/commons/6/64/Poster_not_available.jpg';\n    } else {\n      return `https://image.tmdb.org/t/p/w300/${poster}`;\n    }\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <Container>\n        {castInfo.map(({ original_name, id, profile_path, character }) => (\n          <li key={id}>\n            <PhotoWrapper>\n              <img src={getPoster(profile_path)} alt=\"poster\" />\n            </PhotoWrapper>\n            <p>{original_name}</p>\n            <p>Character:{character}</p>\n          </li>\n        ))}\n      </Container>\n      <Toaster position=\"top-right\" />\n    </>\n  );\n};\nexport default Cast;\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ColorRing\n    visible={true}\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"blocks-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"blocks-wrapper\"\n    colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n  />\n);\n"],"names":["API_KEY","axios","fetchTrendingMovies","params","api_key","language","include_adult","results","data","movies","normalisedMovies","map","id","original_title","poster_path","name","fetchMovieById","fetchCastInfo","fetchReviews","fetchMovieByName","query","PhotoWrapper","styled","Container","useState","castInfo","setCastInfo","loading","setlLoading","error","setError","useParams","useEffect","cast","getCastInfo","toast","Loader","poster","original_name","profile_path","character","src","alt","position","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}